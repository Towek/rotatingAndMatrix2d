// Generated by CoffeeScript 1.10.0
(function() {
  var degreeCurrent, ready, rotateAnim;

  degreeCurrent = 0;

  (function($) {})(jQuery);

  ready = function() {
    var degree, doc, loading, loading2, mouse, output, output2, outputPos, screenCenter;
    output = $("#output");
    output2 = $("#output2");
    loading = $("#loading");
    loading2 = $("#loading2");
    outputPos = output.position();
    degree = $("#debug_degree");
    screenCenter = {
      x: $(document).width() / 2,
      y: $(document).height() / 2
    };
    output.css({
      'top': screenCenter.y - output.height() / 2
    });
    output.css({
      'left': screenCenter.x - output.width() / 2 - 500
    });
    output2.css({
      'top': screenCenter.y - output.height() / 2
    });
    output2.css({
      'left': screenCenter.x - output.width() / 2 + 500
    });
    doc = $(document);
    mouse = {
      x: 1,
      y: 1
    };
    $(window).mousemove(function(event) {
      mouse.x = event.pageX;
      mouse.y = event.pageY;
      output.css({
        "top": output.css('top' + mouse.y / 3)
      });
      return output.css({
        "left": output.css('left' + mouse.x / 3)
      });
    });
    setInterval((function() {
      var matrix;
      rotateAnim(90, 0.1, "#output");
      degree.html(degreeCurrent);
      matrix = new WebKitCSSMatrix(getComputedStyle($('#output')[0]).webkitTransform);
      loading.css({
        'top': output.width() * matrix.c - output.width() * matrix.a + screenCenter.y + output.height() / 2 - loading.height()
      });
      return loading.css({
        'left': screenCenter.x + output.height() / 2 - loading.width() - 500
      });
    }), 1);
    return setInterval((function() {
      var rads;
      rotateAnim(90, 0.1, "#output2");
      rads = degreeCurrent / (180 / Math.PI);
      loading2.css({
        'top': (output2.height() * (Math.cos(rads) * -1)) + (output2.height() * Math.sin(rads)) + screenCenter.y + output.height() - loading.height()
      });
      return loading2.css({
        'left': screenCenter.x + output.height() / 2 - loading.width() + 500
      });
    }), 1);
  };

  rotateAnim = function(degree, speed, target) {
    $(target).css({
      '-webkit-transform': 'rotate(' + degreeCurrent + 'deg)',
      '-moz-transform': 'rotate(' + degreeCurrent + 'deg)',
      '-ms-transform': 'rotate(' + degreeCurrent + 'deg)',
      '-o-transform': 'rotate(' + degreeCurrent + 'deg)',
      'transform': 'rotate(' + degreeCurrent + 'deg)'
    });
    if (degreeCurrent < degree) {
      return degreeCurrent += speed;
    } else {
      return degreeCurrent = 0;
    }
  };

  $(document).ready(ready);

}).call(this);
